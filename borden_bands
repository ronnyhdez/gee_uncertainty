/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-79.9475699912385, 44.31059916513732],
          [-79.9475699912385, 44.3082038411823],
          [-79.94336428750314, 44.3082038411823],
          [-79.94336428750314, 44.31059916513732]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

// ############# Test to export bands as collection ###############################################################
// Another solution (with too much coding) is to specify all the bands and return the 
// feature collection.
var borden_bands = ee.ImageCollection('COPERNICUS/S2_SR')
.filterDate('2019-08-01', '2019-08-30')  //filter start and end date
.filterBounds(geometry)   //filter according to drawn boundary
.map(function (image) {return (image.clip(geometry))})
// .select(['AOT', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8',
//           'B8A', 'B9', 'B11', 'B12', 'MSK_CLDPRB', 'MSK_SNWPRB', 
//           'QA10', 'QA20', 'QA60', 'SCL', 'TCI_B', 'TCI_G', 'TCI_R',
//           'WVP'])
.map(function (image) {return (image.sample( { region: geometry, scale:10, geometries: true}) )});

// print(ee.Feature(ee.FeatureCollection(borden_bands.first()).aggregate_array("B1")))

// Map.centerObject(borden_bands);
// Map.addLayer(borden_bands);

print(borden_bands)

// var borden_list = borden_bands.toList(borden_bands.size());

// print(borden_list.get(2))

// var borden_size = borden_bands.size()
// print(borden_size)

// print(ee.FeatureCollection(borden_list.get(0)).get("system:index"))

// var n = borden_list.size().getInfo();

// for (var i = 0; i < n; i++) {
//   var feature_collection = ee.FeatureCollection(borden_list.get(i));
//   var id = feature_collection.get("system:index").getInfo();
//   Export.table.toDrive({
//     collection: feature_collection,
//     description: id,
//     fileFormat: "CSV",
//     fileNamePrefix: id,
//     folder: "08-GEE"
//   });
// }

// for (var i = 0; i < borden_size; i++) {
//   // var name_file = ee.String("test_bands").cat(ee.String(i));
//   print(ee.Number(1))
// }

// This one exports the collection to Drive, but without the band values. What I obtained it was just the
// "description" of the band (the same result as the list from Richard). Looking for some answers, I read that
// even if it is a point I should apply a reduce function to obtain the mean/median/max/min.

// ############# Test to add date column with human readable format ###############################################

//var convert_to_FC = function(image){
//  var date = image.get('system:time_start');
//  var value = image.reduceRegion({
//    reducer: ee.Reducer.median(), 
//    geometry: geometry, 
//    scale: 100}).get('NDVI');
//  var feature = ee.Feature(null, // geometry
//                            {'system:time_start': date, // properties
//                            'date': ee.Date(date).format('Y/M/d'), 
//                            'ndvi_value': value});
//  return feature;
//};








